(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{389:function(l,t,a){"use strict";a.r(t);var e=a(45),i=Object(e.a)({},(function(){var l=this,t=l.$createElement,a=l._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[a("h2",{attrs:{id:"常用plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用plugins"}},[l._v("#")]),l._v(" 常用plugins")]),l._v(" "),a("ul",[a("li",[l._v("Loader 就是负责完成项目中各种各样资源模块的加载，从而实现整体项目的模块化，而 Plugin 则是用来解决项目中除了资源模块打包以外的其他自动化工作")]),l._v(" "),a("li",[l._v("最常见的应用场景\n"),a("ul",[a("li",[l._v("实现自动在打包之前清除 dist 目录（上次的打包结果）；")]),l._v(" "),a("li",[l._v("自动生成应用所需要的 HTML 文件；")]),l._v(" "),a("li",[l._v("根据不同环境为代码注入类似 API 地址这种可能变化的部分；")]),l._v(" "),a("li",[l._v("拷贝不需要参与打包的资源文件到输出目录；")]),l._v(" "),a("li",[l._v("压缩 Webpack 打包完成后输出的文件；")]),l._v(" "),a("li",[l._v("自动发布打包结果到服务器实现自动部署")])])])]),l._v(" "),a("h3",{attrs:{id:"clean-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-webpack-plugin"}},[l._v("#")]),l._v(" clean-webpack-plugin")]),l._v(" "),a("ul",[a("li",[l._v("Webpack 每次打包的结果都是直接覆盖到 dist 目录。而在打包之前，dist 目录中就可能已经存入了一些在上一次打包操作时遗留的文件，当我们再次打包时，只能覆盖掉同名文件，而那些已经移除的资源文件就会一直累积在里面，最终导致部署上线时出现多余文件")])])])}),[],!1,null,null,null);t.default=i.exports}}]);