(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{437:function(s,a,t){"use strict";t.r(a);var e=t(45),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"xss攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击"}},[s._v("#")]),s._v(" XSS攻击")]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("ul",[t("li",[s._v("Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全")])]),s._v(" "),t("h3",{attrs:{id:"分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[s._v("#")]),s._v(" 分类")]),s._v(" "),t("ul",[t("li",[s._v("存储型 XSS ：恶意代码存在数据库里（这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等）\n"),t("ul",[t("li",[s._v("攻击者将恶意代码提交到目标网站的数据库中。")]),s._v(" "),t("li",[s._v("用户打开目标网站时，网站服务端将恶意代码从数据库取出，拼接在 HTML 中返回给浏览器。")]),s._v(" "),t("li",[s._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),s._v(" "),t("li",[s._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])])]),s._v(" "),t("li",[s._v("反射型 XSS ： 恶意代码存在 URL 里（常见于通过 URL 传递参数的功能，如网站搜索、跳转等）\n"),t("ul",[t("li",[s._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),s._v(" "),t("li",[s._v("用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。")]),s._v(" "),t("li",[s._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),s._v(" "),t("li",[s._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作")])])])]),s._v(" "),t("h3",{attrs:{id:"预防"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预防"}},[s._v("#")]),s._v(" 预防")]),s._v(" "),t("ul",[t("li",[s._v("对输入进行过滤： <script>、<img>、<a>等标签进行过滤，或者可以当成字符串进行存储或者展示")]),s._v(" "),t("li",[s._v("使用encodeURIComponent对url中的参数进行编码(反射型xss)")]),s._v(" "),t("li",[s._v("HTTP-only Cookie: 服务器端设置cookie为httpOnly让前端无法通过js获取到用户的cookie，攻击者完成 XSS 注入后也无法窃取此 Cookie。")]),s._v(" "),t("li",[s._v("关键请求使用验证码：防止脚本冒充用户提交危险操作")])]),s._v(" "),t("h2",{attrs:{id:"csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[s._v("#")]),s._v(" CSRF")]),s._v(" "),t("h3",{attrs:{id:"概念-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("ul",[t("li",[s._v("CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的")])]),s._v(" "),t("h3",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("ul",[t("li",[s._v("受害者登录a.com，并保留了登录凭证（Cookie）。")]),s._v(" "),t("li",[s._v("攻击者引诱受害者访问了b.com。")]),s._v(" "),t("li",[s._v("b.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会默认携带a.com的Cookie。")]),s._v(" "),t("li",[s._v("a.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。")]),s._v(" "),t("li",[s._v("a.com以受害者的名义执行了act=xx。")]),s._v(" "),t("li",[s._v("攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作")])]),s._v(" "),t("h3",{attrs:{id:"预防-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预防-2"}},[s._v("#")]),s._v(" 预防")]),s._v(" "),t("ul",[t("li",[s._v("Samesite Cookie")]),s._v(" "),t("li",[s._v("同源检测，检测http请求头的Referer")]),s._v(" "),t("li",[s._v("HTTP-only Cookie: 服务器端设置cookie为httpOnly让前端无法通过js获取到用户的cookie，攻击者完成 XSS 注入后也无法窃取此 Cookie。")]),s._v(" "),t("li",[s._v("关键请求使用验证码：防止脚本冒充用户提交危险操作")])]),s._v(" "),t("h2",{attrs:{id:"sql注入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql注入"}},[s._v("#")]),s._v(" SQL注入")]),s._v(" "),t("h3",{attrs:{id:"概念-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("ul",[t("li",[s._v("就是将sql代码伪装到输入参数中，传递到服务器解析并执行的一种攻击手法。在编写SQL语句时，如果直接将用户传入的数据作为参数使用字符串拼接的方式插入到SQL查询中，那么攻击者可以通过注入其他语句来执行攻击操作，这些攻击包括可以通过SQL语句做的任何事：获取敏感数据、修改数据、删除数据库表等")])]),s._v(" "),t("h3",{attrs:{id:"示例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),t("ul",[t("li",[s._v("比如我们使用的登录接口：在登录界面包括用户名和密码输入框，以及提交按钮，输入用户名和密码，提交")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 正常提交\nSELECT * FROM user WHERE username = 'ls' AND password = '123456'\n\n//sql中会将#及--以后的字符串当做注释处理，如果我们使用“' or 1=1 #” 作为用户名参数\nselect * from users where username='' or 1=1#' and password='123456'\n等价于查询出所有的登陆用户\nselect * from users where username='' or 1=1\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"预防-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预防-3"}},[s._v("#")]),s._v(" 预防")]),s._v(" "),t("ul",[t("li",[s._v("严格的参数校验,提前进行特殊字符校验")]),s._v(" "),t("li",[s._v("sql预编译: 数据库（如MySQL）自身提供的预编译功能，即先将SQL语句中的参数用?替换，发给数据库进行预编译，得到编译结果后再传入参数替换?，执行SQL")])])])}),[],!1,null,null,null);a.default=r.exports}}]);